# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

resources:
- repo: self

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerfilePath: '$(Build.SourcesDirectory)/src/Dockerfile'
  webRepository: 'web'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and publish Java container
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    variables:
    - group: Release
steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    options: '-DskipITs --settings ./maven/settings.xml'
    publishJUnitResults: false
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: |
      target/myshuttledev*.war
      *.sql
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: Docker@2
  inputs:
    containerRegistry: 'myShuttleRegistryConnection'
    repository: '$(webRepository)'
    command: 'buildAndPush'
    Dockerfile: '$(dockerfilePath)'
    buildContext: '$(build.artifactstagingdirectory)'
    tags: '$(tag)'
- task: AzureMysqlDeployment@1
  inputs:
    azureSubscription: 'myShuttleAzureConnection'
    ServerName: 'lmshuttledb.mysql.database.azure.com'
    DatabaseName: 'alm'
    SqlUsername: '$(MySqlUserName)@$(MySqlServer)'
    SqlPassword: '$(MySqlPassword)'
    TaskNameSelector: 'SqlTaskFile'
    SqlFile: '$(Build.SourcesDirectory)/CreateMYSQLDB.sql'
    IpDetectionMethod: 'AutoDetect'
